{
  "host": "api.dazzl.local",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "swagger": "2.2.4",
  "info": {
    "version": "v1",
    "description": "# Service API for Dazzl\n\nApi for management accounts and services to dazzl.tv\n",
    "title": "Dazzl API",
    "contact": {
      "name": "Dazzl API support",
      "email": "api@dazzl.tv"
    }
  },
  "paths": {
    "/cgus.json": {
      "get": {
        "description": "# List all CGUs\n\nList all CGU present in Database.\n\n**Request just for admin user**\n",
        "summary": "List CGUs",
        "tags": [
          "cgus"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cgu"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": {
        }
      },
      "post": {
        "description": "# Create a new CGU\n\nCreate a new CGU for Dazzl service.\n\nThe text markdown it's an object who content a string with local.\n[See MongoID docs](https://docs.mongodb.com/ruby-driver/master/tutorials/5.1.0/mongoid-documents/#localized-fields)\n",
        "summary": "Create a new CGU",
        "tags": [
          "cgus"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cgu",
            "in": "body",
            "description": "Cgu informations",
            "schema": {
              "$ref": "#/definitions/Cgu"
            },
            "required": true
          }
        ]
      }
    },
    "/cgus/{id}.json": {
      "get": {
        "description": "# Return a CGU.\n\nContains a Terms of Service used by Dazzl.\n\nChange Content-Type for rendering to markdown, html or json format :\n* application/json : json (default)\n* text/plain : markdown\n* text/html : html\n\n**If you asking json form all information to CGU is given, but for markdown and\nhtml just a text is returned**\n",
        "summary": "Show a CGU",
        "tags": [
          "cgus"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cgu"
            }
          }
        },
        "produces": [
          "application/json",
          "text/plain",
          "text/html"
        ],
        "consumes": [
          "application/json",
          "text/plain",
          "text/html"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier cgu",
            "type": "string",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Format response",
            "type": "string",
            "required": false,
            "enum": [
              "application/json",
              "text/plain",
              "text/html"
            ]
          }
        ]
      },
      "put": {
        "description": "# Update CGU\nUpdate a CGU given in path parameter. If you use PUT verb you replace all fields and\nif you use PATCH verb you replace just field with data given.\n",
        "summary": "Update CGU",
        "tags": [
          "cgus"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cgu identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "patch": {
        "description": "# Update CGU\nUpdate a CGU given in path parameter. If you use PUT verb you replace all fields and\nif you use PATCH verb you replace just field with data given.\n",
        "summary": "Update CGU",
        "tags": [
          "cgus"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cgu identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "description": "# Delete CGU\nDelete a CGU given in path parameter.\n",
        "summary": "Destroy a CGU",
        "tags": [
          "cgus"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cgu identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/cgus/current.json": {
      "get": {
        "description": "# Last CGU\n\nReturn text of last CGU version existed.\n\nChange Content-Type for rendering to markdown, html or json format :\n* application/json : json (default)\n* text/plain : markdown\n* text/html : html\n",
        "summary": "Last cgu",
        "tags": [
          "cgus"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cgu"
            }
          }
        },
        "produces": [
          "application/json",
          "text/plain",
          "text/html"
        ],
        "consumes": [
          "application/json",
          "text/plain",
          "text/html"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Format response",
            "type": "string",
            "required": false,
            "enum": [
              "application/json",
              "text/plain",
              "text/html"
            ]
          }
        ]
      }
    },
    "/cgus/{id}/version.json": {
      "get": {
        "description": "# Version of CGU\nReturn a version to CGU given in parameter.\n",
        "summary": "Version CGU",
        "tags": [
          "cgus"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cgu identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/cgus/{id}/accept.json": {
      "post": {
        "summary": "Accept CGU",
        "tags": [
          "cgus"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cgu identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/cgus/accepted.json": {
      "get": {
        "description": "# Accepted CGU\n",
        "summary": "Accepted CGU",
        "tags": [
          "cgus"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": {
        }
      }
    },
    "/channels.json": {
      "get": {
        "description": "This method return a list of existing channels, depending on the specified scope.\nScope can be either +view+, +publish+ or +submit+ :\n\n[view] default scope, returns the list of channels that can be viewed by the requester\n\n[publish] returns the list of channels the requester can control as a publisher, i.e. can\nselect _On_ _Air_ video and audio\n\n[submit] returns the list of channels on which the requester can submit new cast\n",
        "summary": "List channels",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "description": "Scope, i.e. view, publish or submit",
            "type": "string",
            "required": false
          }
        ]
      },
      "post": {
        "summary": "Create a new channel",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": {
        }
      }
    },
    "/users/{id}/channels.json": {
      "get": {
        "summary": "List videocasts owned by a given user",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create a new channel for an existing user",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/channels/{id}.json": {
      "get": {
        "summary": "Get details on a specific channel",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Channel unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Update an existing channel",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Channel unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "patch": {
        "summary": "Update an existing channel",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Channel unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "Delete an existing channel",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Channel unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/channels/{id}/selected.json": {
      "get": {
        "summary": "Retreive active videocast for existing channel",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Channel unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "put|patch": {
        "summary": "Update selected videocast for an existing channel",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Channel unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "Unselect active videocast for existing channel",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Channel unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/channels/{id}/ice_servers.json": {
      "get": {
        "summary": "List Ice Servers available for a given channel",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Channel unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/channels/{id}/invite.json": {
      "post": {
        "summary": "Create a new invite on a given channel",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Channel unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/channels/{id}/request.json": {
      "post": {
        "summary": "Create a new request for current user on a given channel",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Channel unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/channels/{id}/subscriptions.json": {
      "get": {
        "summary": "List subscriptions of a given channel",
        "tags": [
          "channels"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Channel unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/control_rooms.json": {
      "get": {
        "summary": "List all active control rooms",
        "tags": [
          "control_rooms"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": {
        }
      }
    },
    "/channels/{id}/control_rooms.json": {
      "get": {
        "summary": "List control rooms for a given channel",
        "tags": [
          "control_rooms"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Control room unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create a new control room",
        "tags": [
          "control_rooms"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Control room unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/control_rooms/{id}.json": {
      "get": {
        "summary": "Get details on a specific control room",
        "tags": [
          "control_rooms"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Control room unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "Delete an existing control room",
        "tags": [
          "control_rooms"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Control room unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/control_rooms/{id}/sdp_offer.json": {
      "get": {
        "summary": "Retreive SDP description (offer) of the controlled channel",
        "tags": [
          "control_rooms"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Control room unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/control_rooms/{id}/sdp_answer.json": {
      "post": {
        "summary": "Provide SDP description (answer) for this controlling session",
        "tags": [
          "control_rooms"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Control room unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Retreive SDP description (answer) for this control room",
        "tags": [
          "control_rooms"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Control room unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/viewers/:viewer_id/ice_candidates.json": {
      "get": {
        "summary": "List all candidates for a given peer",
        "tags": [
          "ice_candidates"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "peer_id",
            "in": "path",
            "description": "Peer unique identifier",
            "type": "string",
            "required": true
          },
          {
            "name": "peer_type",
            "in": "query",
            "description": "Peer route: either +videocasts+ +control rooms+ or +previews+",
            "type": "string",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create new ICE candidate",
        "tags": [
          "ice_candidates"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "peer_id",
            "in": "path",
            "description": "Peer (videocast) unique identifier",
            "type": "string",
            "required": true
          },
          {
            "name": "peer_type",
            "in": "query",
            "description": "Peer route: either +videocasts+ +control rooms+ or +previews+",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/viewers/:viewer_id/ice_candidates/{id}.json": {
      "get": {
        "summary": "Get details on a specific candidate",
        "tags": [
          "ice_candidates"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Ice candidate unique identifier",
            "type": "string",
            "required": true
          },
          {
            "name": "peer_id",
            "in": "path",
            "description": "Peer unique identifier",
            "type": "string",
            "required": true
          },
          {
            "name": "peer_type",
            "in": "query",
            "description": "Peer route: either +videocasts+ +control rooms+ or +previews+",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/control_rooms/{id}/previews.json": {
      "get": {
        "summary": "List previews for a given control room",
        "tags": [
          "previews"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "control_room_id",
            "in": "path",
            "description": "Control room unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create a new preview",
        "tags": [
          "previews"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "control_room_id",
            "in": "path",
            "description": "Control room that hosts this preview",
            "type": "string",
            "required": true
          },
          {
            "name": "preview_videocast_id",
            "in": "formData",
            "description": "Preview information",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/previews/{id}.json": {
      "get": {
        "summary": "Get details on a specific preview",
        "tags": [
          "previews"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Preview unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "Delete an existing preview",
        "tags": [
          "previews"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Preview unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/previews/{id}/sdp_offer.json": {
      "get": {
        "summary": "Retreive SDP description (offer) of the monitored videocast",
        "tags": [
          "previews"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Preview unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/previews/{id}/sdp_answer.json": {
      "post": {
        "summary": "Provide SDP description (answer) for this monitoring session",
        "tags": [
          "previews"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "control_room_id",
            "in": "path",
            "description": "Control room unique identifier",
            "type": "string",
            "required": true
          },
          {
            "name": "preview",
            "in": "formData",
            "description": "Preview information",
            "type": "string",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Retreive SDP description (answer) for this preview",
        "tags": [
          "previews"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Preview unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/users/:user_id/create.json": {
      "post": {
        "summary": "create a new user",
        "tags": [
          "signup"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": {
        }
      }
    },
    "/subscription_tokens.json": {
      "post": {
        "summary": "Create a subscription token",
        "tags": [
          "subscription_tokens"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": {
        }
      }
    },
    "/subscriptions.json": {
      "get": {
        "summary": "List subscriptions for current user",
        "tags": [
          "subscriptions"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": {
        }
      },
      "post": {
        "summary": "Create a subscription, allow user to get acces to a channel",
        "tags": [
          "subscriptions"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "description": "Subscription token",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/subscriptions/{id}.json": {
      "get": {
        "summary": "Get details on a specific subscription",
        "tags": [
          "subscriptions"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subscription unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Update an existing subscription, used to accept or revoke invites and requests",
        "tags": [
          "subscriptions"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subscription unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "patch": {
        "summary": "Update an existing subscription, used to accept or revoke invites and requests",
        "tags": [
          "subscriptions"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subscription unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "Delete an existing subscription",
        "tags": [
          "subscriptions"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subscription unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/users.json": {
      "get": {
        "summary": "List all users",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": {
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/users/{id}.json": {
      "get": {
        "summary": "Get details on a specific user",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Update an existing user",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "patch": {
        "summary": "Update an existing user",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "Delete user",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/users/me.json": {
      "get": {
        "summary": "Get current user details",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": {
        },
        "deprecated": true
      }
    },
    "/users/{id}/confirmation/phone.json": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Send phone confirmation",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": {
        }
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "summary": "Accept current phone",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": {
        }
      }
    },
    "/users/{id}/confirmation/email.json": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Send email confirmation",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": {
        }
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "summary": "Accept current email",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": {
        }
      }
    },
    "/users/{id}/lock.json": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Lock account",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": {
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "summary": "Unlock account",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": {
        }
      }
    },
    "/videocasts.json": {
      "get": {
        "summary": "List all videocasts",
        "tags": [
          "videocasts"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": {
        }
      }
    },
    "/channels/{id}/videocasts.json": {
      "get": {
        "description": "This method return a list of existing videocasts, depending on the specified scope.\nScope can be either +live+, +replay+ or +all+ :\n* [all] default scope, returns the list all of videocasts for the given channel\n* [live] returns the list of currently _On_ _Air_ videocasts\n* [replay] returns the list of recorded videocasts for the given channel\n",
        "summary": "List videocasts published in a given channel",
        "tags": [
          "videocasts"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "description": "Channel unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create a new videocast",
        "tags": [
          "videocasts"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "description": "Channel on which this videocast should be published",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/users/{id}/videocasts.json": {
      "get": {
        "summary": "List videocasts published by a given user",
        "tags": [
          "videocasts"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/videocasts/{id}.json": {
      "get": {
        "summary": "Get details on a specific videocast",
        "tags": [
          "videocasts"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Videocast unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Update an existing videocast",
        "tags": [
          "videocasts"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": {
        }
      },
      "patch": {
        "summary": "Update an existing videocast",
        "tags": [
          "videocasts"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": {
        }
      },
      "delete": {
        "summary": "Delete an existing videocast",
        "tags": [
          "videocasts"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Videocast unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/videocasts/{id}/sdp_offer.json": {
      "post": {
        "summary": "Provide SDP description (offer) for this videocast",
        "tags": [
          "videocasts"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": {
        }
      },
      "get": {
        "summary": "Retreive SDP description (offer) for this videocast",
        "tags": [
          "videocasts"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Videocast unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "description": "Delete SDP description (offer) for this videocast, and then hangup the connection on the\nJanus gateway.\n",
        "summary": "Delete SDP",
        "tags": [
          "videocasts"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Videocast unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/videocasts/{id}/sdp_answer.json": {
      "get": {
        "summary": "Retreive SDP description (answer) for this videocast",
        "tags": [
          "videocasts"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Videocast unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/viewers.json": {
      "get": {
        "summary": "List all active viewers",
        "tags": [
          "viewers"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": {
        }
      }
    },
    "/channels/{id}/viewers.json": {
      "get": {
        "summary": "List viewers for a given channel",
        "tags": [
          "viewers"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "description": "Channel unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create a new viewer",
        "tags": [
          "viewers"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "description": "Channel that this new viewer should display",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/viewers/{id}.json": {
      "get": {
        "summary": "Get details on a specific viewer",
        "tags": [
          "viewers"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Viewer unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "Delete an existing viewer",
        "tags": [
          "viewers"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Viewer unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/viewers/{id}/sdp_offer.json": {
      "get": {
        "description": "Retreive SDP description (offer) of the controlled channel",
        "summary": "Retreive SDP",
        "tags": [
          "viewers"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Viewer unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/viewers/{id}/sdp_answer.json": {
      "post": {
        "description": "Provide SDP description (answer) for this controlling session",
        "summary": "Provide SDP",
        "tags": [
          "viewers"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Viewer unique identifier",
            "type": "string",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Retreive SDP description (answer) for this viewer",
        "tags": [
          "viewers"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Viewer unique identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/me.json": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "summary": "Get details on me (current user)",
        "tags": [
          "me"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": {
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "summary": "Update my information, expect phone, email and password.",
        "tags": [
          "me"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "description": "My name",
            "schema": {
              "$ref": "string"
            },
            "required": false
          },
          {
            "name": "lastname",
            "in": "body",
            "description": "My lastname",
            "schema": {
              "$ref": "string"
            },
            "required": false
          },
          {
            "name": "birthday",
            "in": "body",
            "description": "My birthday",
            "schema": {
              "$ref": "string"
            },
            "required": false
          }
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "summary": "Update my information, expect phone, email and password.",
        "tags": [
          "me"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "description": "My name",
            "schema": {
              "$ref": "string"
            },
            "required": false
          },
          {
            "name": "lastname",
            "in": "body",
            "description": "My lastname",
            "schema": {
              "$ref": "string"
            },
            "required": false
          },
          {
            "name": "birthday",
            "in": "body",
            "description": "My birthday",
            "schema": {
              "$ref": "string"
            },
            "required": false
          }
        ]
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "summary": "Delete user",
        "tags": [
          "me"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": {
        }
      }
    },
    "/me/password.json": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Update my password",
        "tags": [
          "me"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "password_new",
            "in": "body",
            "description": "My new password",
            "schema": {
              "$ref": "string"
            },
            "required": true
          },
          {
            "name": "password_confirmation",
            "in": "body",
            "description": "My new password confirmation",
            "schema": {
              "$ref": "string"
            },
            "required": true
          }
        ]
      }
    },
    "/me/email.json": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Update my email",
        "tags": [
          "me"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "My new email",
            "schema": {
              "$ref": "string"
            },
            "required": true
          }
        ]
      }
    },
    "/me/phone.json": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Update my phone number",
        "tags": [
          "me"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "body",
            "description": "My new phone number",
            "schema": {
              "$ref": "string"
            },
            "required": true
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "cgus",
      "description": "CGUs management"
    },
    {
      "name": "channels",
      "description": "Dazzl channels management"
    },
    {
      "name": "control_rooms",
      "description": "Dazzl Control Room Management"
    },
    {
      "name": "ice_candidates",
      "description": "ICE candidates for Dazzl peers (videocasts or players)"
    },
    {
      "name": "previews",
      "description": "Dazzl previews management"
    },
    {
      "name": "signup",
      "description": "Dazzl Singup management"
    },
    {
      "name": "subscription_tokens",
      "description": "Subscriptions for videocast manage token"
    },
    {
      "name": "subscriptions",
      "description": "Subscriptions for videocast authorization management"
    },
    {
      "name": "users",
      "description": "Dazzl Users management"
    },
    {
      "name": "videocasts",
      "description": "Dazzl live streams"
    },
    {
      "name": "viewers",
      "description": "Dazzl Viewers management"
    }
  ],
  "definitions": {
    "Cgu": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "string"
        },
        "markdown": {
          "type": "string"
        }
      }
    },
    "Channel": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "title": {
          "type": "string"
        },
        "janus_id": {
          "type": "integer",
          "format": "int64"
        },
        "preferred_janus_id": {
          "type": "integer",
          "format": "int64"
        },
        "autoselect": {
          "type": "boolean"
        },
        "fir_frequency": {
          "type": "integer",
          "format": "int64"
        },
        "bitrate": {
          "type": "integer",
          "format": "int64"
        },
        "monitor_bitrate": {
          "type": "integer",
          "format": "int64"
        },
        "framerate": {
          "type": "integer",
          "format": "int64"
        },
        "resolution": {
          "type": "string"
        },
        "aspect_ratio": {
          "type": "string"
        },
        "record": {
          "type": "boolean"
        },
        "forward": {
          "type": "boolean"
        },
        "selected_id": {
          "type": "string"
        },
        "_video_codec": {
          "type": "string"
        },
        "publisher_id": {
          "type": "string"
        },
        "janus_server_id": {
          "type": "string"
        }
      }
    },
    "ControlRoom": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "sdp_offer": {
          "type": "string"
        },
        "sdp_answer": {
          "type": "string"
        },
        "janus_videocast_id": {
          "type": "integer",
          "format": "int64"
        },
        "_type": {
          "type": "string"
        },
        "accessed_at": {
          "type": "string",
          "format": "date-time"
        },
        "owner_id": {
          "type": "string"
        },
        "channel_id": {
          "type": "string"
        }
      }
    },
    "IceCandidate": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "candidate": {
          "type": "string"
        },
        "sdpMid": {
          "type": "string"
        },
        "sdpMLineIndex": {
          "type": "integer",
          "format": "int64"
        },
        "sent": {
          "type": "boolean"
        }
      }
    },
    "Preview": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "sdp_offer": {
          "type": "string"
        },
        "sdp_answer": {
          "type": "string"
        },
        "janus_videocast_id": {
          "type": "integer",
          "format": "int64"
        },
        "_type": {
          "type": "string"
        },
        "control_room_id": {
          "type": "string"
        },
        "videocast_id": {
          "type": "string"
        }
      }
    },
    "SubscriptionToken": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "token": {
          "type": "string"
        },
        "expires_in": {
          "type": "integer",
          "format": "int64"
        },
        "user_id": {
          "type": "string"
        },
        "channel_id": {
          "type": "string"
        }
      }
    },
    "Subscription": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "_status": {
          "type": "string"
        },
        "expires_in": {
          "type": "integer",
          "format": "int64"
        },
        "channel_id": {
          "type": "string"
        },
        "videocaster_id": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "encrypted_password": {
          "type": "string"
        },
        "remember_created_at": {
          "type": "string",
          "format": "date-time"
        },
        "reset_password_token": {
          "type": "string"
        },
        "reset_password_sent_at": {
          "type": "string",
          "format": "date-time"
        },
        "sign_in_count": {
          "type": "integer",
          "format": "int64"
        },
        "current_sign_in_at": {
          "type": "string",
          "format": "date-time"
        },
        "last_sign_in_at": {
          "type": "string",
          "format": "date-time"
        },
        "current_sign_in_ip": {
          "type": "string"
        },
        "last_sign_in_ip": {
          "type": "string"
        },
        "birthday": {
          "type": "string",
          "format": "date"
        },
        "phone": {
          "type": "string"
        },
        "cgu_id": {
          "type": "string"
        }
      }
    },
    "Videocast": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "sdp_offer": {
          "type": "string"
        },
        "sdp_answer": {
          "type": "string"
        },
        "janus_videocast_id": {
          "type": "integer",
          "format": "int64"
        },
        "_type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "owner_id": {
          "type": "string"
        },
        "channel_id": {
          "type": "string"
        }
      }
    },
    "Viewer": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "sdp_offer": {
          "type": "string"
        },
        "sdp_answer": {
          "type": "string"
        },
        "janus_videocast_id": {
          "type": "integer",
          "format": "int64"
        },
        "_type": {
          "type": "string"
        },
        "owner_id": {
          "type": "string"
        },
        "channel_id": {
          "type": "string"
        }
      }
    },
    "IceServer": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "_protocol": {
          "type": "string"
        },
        "_transport": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "credential": {
          "type": "string"
        }
      }
    },
    "JanusServer": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "_protocol": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int64"
        },
        "path": {
          "type": "string"
        },
        "janus_session": {
          "type": "integer",
          "format": "int64"
        },
        "janus_handle": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}
